# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: wallet/v1/wallet.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
import wallet.v1.wallet_pb2


class WalletServiceBase(abc.ABC):

    @abc.abstractmethod
    async def Create(self, stream: 'grpclib.server.Stream[wallet.v1.wallet_pb2.CreateRequest, wallet.v1.wallet_pb2.CreateResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/basic.wallet.v1.WalletService/Create': grpclib.const.Handler(
                self.Create,
                grpclib.const.Cardinality.UNARY_UNARY,
                wallet.v1.wallet_pb2.CreateRequest,
                wallet.v1.wallet_pb2.CreateResponse,
            ),
        }


class WalletServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Create = grpclib.client.UnaryUnaryMethod(
            channel,
            '/basic.wallet.v1.WalletService/Create',
            wallet.v1.wallet_pb2.CreateRequest,
            wallet.v1.wallet_pb2.CreateResponse,
        )
